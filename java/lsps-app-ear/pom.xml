<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.whitestein.lsps.default-app</groupId>
		<artifactId>lsps-app</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<artifactId>lsps-app-ear</artifactId>
	<name>LSPS: Application: EAR Distribution</name>
	<description>Living Systems Process Suite: Application: EAR Distribution</description>
	<packaging>ear</packaging>

	<properties>
		<docker.tag.prefix>docker.k8s.whitestein.com/lsps</docker.tag.prefix>
		<docker.hub.url>docker.k8s.whitestein.com</docker.hub.url>
		<docker.registry.username>deployment</docker.registry.username>
		<docker.registry.password>sendPasswordAsParameter</docker.registry.password>
		<docker.targetdb>h2</docker.targetdb>
		<!--docker.targetdb>mysql</docker.targetdb-->
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.whitestein.lsps.engine</groupId>
			<artifactId>lsps-engine-exec</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.org-structure</groupId>
			<artifactId>lsps-os-exec</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.person-management</groupId>
			<artifactId>lsps-pm-exec</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.human-processes</groupId>
			<artifactId>lsps-human-exec</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.tools</groupId>
			<artifactId>lsps-tools-components</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.tools</groupId>
			<artifactId>lsps-tools-debugger-server</artifactId>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.default-app</groupId>
			<artifactId>lsps-app-ejb</artifactId>
			<version>0.1-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.monitoring</groupId>
			<artifactId>lsps-monitoring-exec</artifactId>
			<type>ejb</type>
		</dependency>

		<dependency>
			<groupId>com.whitestein.lsps.default-app</groupId>
			<artifactId>lsps-app-vaadin-war</artifactId>
			<version>0.1-SNAPSHOT</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.default-app</groupId>
			<artifactId>lsps-app-vaadin</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.webconsole</groupId>
			<artifactId>lsps-webconsole-vaadin-war</artifactId>
			<type>war</type>
		</dependency>
        <dependency>
            <groupId>com.whitestein.lsps.webconsole</groupId>
            <artifactId>lsps-webconsole-vaadin</artifactId>
        </dependency>
		<dependency>
			<groupId>com.whitestein.lsps.human-processes</groupId>
			<artifactId>lsps-human-ws</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.engine</groupId>
			<artifactId>lsps-engine-ws</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.org-structure</groupId>
			<artifactId>lsps-os-ws</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.monitoring</groupId>
			<artifactId>lsps-monitoring-ws</artifactId>
			<type>war</type>
		</dependency>
		
		<!--  SLF4J over jdk14 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
		</dependency>

		<dependency>
			<groupId>com.whitestein.lsps.common</groupId>
			<artifactId>lsps-common-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Are used by docker image build therefore should be build before -->
		<dependency>
			<groupId>com.whitestein.lsps.default-app</groupId>
			<artifactId>lsps-app-db-migration</artifactId>
			<version>0.1-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.whitestein.lsps.default-app</groupId>
			<artifactId>lsps-app-model-exporter</artifactId>
			<version>0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>com.whitestein.lsps.stdlib</groupId>
					<artifactId>lsps-stdlib-modules</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.whitestein.lsps.stdlib</groupId>
					<artifactId>lsps-bam-modules</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- skip the deploy (artifact is large and is not needed in maven repository) -->
	   		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-ear-plugin</artifactId>
				<configuration>
					<displayName>LSPS</displayName>
					<description>Living Systems Process Suite ${project.version}</description>
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
					<version>6</version>
					<filtering>true</filtering>
					<modules>
						<ejbModule>
							<groupId>com.whitestein.lsps.default-app</groupId>
							<artifactId>lsps-app-ejb</artifactId>
							<bundleFileName>lsps-app-ejb.jar</bundleFileName>
						</ejbModule>
					
						<ejbModule>
							<groupId>com.whitestein.lsps.engine</groupId>
							<artifactId>lsps-engine-exec</artifactId>
							<bundleFileName>lsps-engine-exec.jar</bundleFileName>
						</ejbModule>
						<ejbModule>
							<groupId>com.whitestein.lsps.org-structure</groupId>
							<artifactId>lsps-os-exec</artifactId>
							<bundleFileName>lsps-os-exec.jar</bundleFileName>
						</ejbModule>
						<ejbModule>
							<groupId>com.whitestein.lsps.person-management</groupId>
							<artifactId>lsps-pm-exec</artifactId>
							<bundleFileName>lsps-pm-exec.jar</bundleFileName>
						</ejbModule>
						<ejbModule>
							<groupId>com.whitestein.lsps.human-processes</groupId>
							<artifactId>lsps-human-exec</artifactId>
							<bundleFileName>lsps-human-exec.jar</bundleFileName>
						</ejbModule>
						<ejbModule>
							<groupId>com.whitestein.lsps.monitoring</groupId>
							<artifactId>lsps-monitoring-exec</artifactId>
							<bundleFileName>lsps-monitoring-exec.jar</bundleFileName>
						</ejbModule>


						<ejbModule>
							<groupId>com.whitestein.lsps.tools</groupId>
							<artifactId>lsps-tools-debugger-server</artifactId>
							<bundleFileName>lsps-tools-debugger-server.jar</bundleFileName>
						</ejbModule>

						<ejbModule>
							<groupId>com.whitestein.lsps.tools</groupId>
							<artifactId>lsps-tools-components</artifactId>
							<bundleFileName>lsps-tools-components.jar</bundleFileName>
						</ejbModule>
						
						<webModule>
							<groupId>com.whitestein.lsps.default-app</groupId>
							<artifactId>lsps-app-vaadin-war</artifactId>
							<contextRoot>/lsps-application</contextRoot>
							<bundleFileName>lsps-app-vaadin.war</bundleFileName>
						</webModule>
						<webModule>
							<groupId>com.whitestein.lsps.webconsole</groupId>
							<artifactId>lsps-webconsole-vaadin-war</artifactId>
							<contextRoot>/lsps-management</contextRoot>
							<bundleFileName>lsps-webconsole-vaadin-war.war</bundleFileName>
						</webModule>
						<webModule>
							<groupId>com.whitestein.lsps.human-processes</groupId>
							<artifactId>lsps-human-ws</artifactId>
							<contextRoot>/lsps-human-ws</contextRoot>
							<bundleFileName>lsps-human-ws.war</bundleFileName>
						</webModule>
						<webModule>
							<groupId>com.whitestein.lsps.engine</groupId>
							<artifactId>lsps-engine-ws</artifactId>
							<contextRoot>/lsps-ws</contextRoot>
							<bundleFileName>lsps-engine-ws.war</bundleFileName>
						</webModule>
						<webModule>
							<groupId>com.whitestein.lsps.org-structure</groupId>
							<artifactId>lsps-os-ws</artifactId>
							<contextRoot>/lsps-os-ws</contextRoot>
							<bundleFileName>lsps-os-ws.war</bundleFileName>
						</webModule>
						<webModule>
							<groupId>com.whitestein.lsps.monitoring</groupId>
							<artifactId>lsps-monitoring-ws</artifactId>
							<contextRoot>/lsps-monitoring-ws</contextRoot>
							<bundleFileName>lsps-monitoring-ws.war</bundleFileName>
						</webModule>
					</modules>
					<security>
						<security-role>
							<role-name>user</role-name>
						</security-role>
						<security-role>
							<role-name>processAgent</role-name>
						</security-role>
					</security>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>lsps.ldap</id>
			<activation>
				<property>
					<name>lsps.ldap</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.whitestein.lsps.person-management</groupId>
					<artifactId>lsps-pm-exec</artifactId>
					<type>ejb</type>
					<scope>provided</scope> <!-- this will prevent the lsps-pm-exec-{version}.jar to appear in the EAR -->
				</dependency>
				<dependency>
					<groupId>com.whitestein.lsps.person-management</groupId>
					<artifactId>lsps-pm-ldap-exec</artifactId>
					<type>ejb</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-ear-plugin</artifactId>
						<configuration>
							<displayName>LSPS</displayName>
							<description>Living Systems Process Suite ${project.version}</description>
							<defaultLibBundleDir>lib</defaultLibBundleDir>
							<outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
							<version>6</version>
							<filtering>true</filtering>
							<modules>
								<ejbModule>
									<groupId>com.whitestein.lsps.default-app</groupId>
									<artifactId>lsps-app-ejb</artifactId>
									<bundleFileName>lsps-app-ejb.jar</bundleFileName>
								</ejbModule>
							
								<ejbModule>
									<groupId>com.whitestein.lsps.engine</groupId>
									<artifactId>lsps-engine-exec</artifactId>
									<bundleFileName>lsps-engine-exec.jar</bundleFileName>
								</ejbModule>
								<ejbModule>
									<groupId>com.whitestein.lsps.org-structure</groupId>
									<artifactId>lsps-os-exec</artifactId>
									<bundleFileName>lsps-os-exec.jar</bundleFileName>
								</ejbModule>
								<ejbModule>
									<groupId>com.whitestein.lsps.person-management</groupId>
									<artifactId>lsps-pm-ldap-exec</artifactId>
									<bundleFileName>lsps-pm-ldap-exec.jar</bundleFileName>
								</ejbModule>
								<ejbModule>
									<groupId>com.whitestein.lsps.human-processes</groupId>
									<artifactId>lsps-human-exec</artifactId>
									<bundleFileName>lsps-human-exec.jar</bundleFileName>
								</ejbModule>
								<ejbModule>
									<groupId>com.whitestein.lsps.monitoring</groupId>
									<artifactId>lsps-monitoring-exec</artifactId>
									<bundleFileName>lsps-monitoring-exec.jar</bundleFileName>
								</ejbModule>


								<ejbModule>
									<groupId>com.whitestein.lsps.tools</groupId>
									<artifactId>lsps-tools-debugger-server</artifactId>
									<bundleFileName>lsps-tools-debugger-server.jar</bundleFileName>
								</ejbModule>

								<ejbModule>
									<groupId>com.whitestein.lsps.tools</groupId>
									<artifactId>lsps-tools-components</artifactId>
									<bundleFileName>lsps-tools-components.jar</bundleFileName>
								</ejbModule>
								
								<webModule>
									<groupId>com.whitestein.lsps.default-app</groupId>
									<artifactId>lsps-app-vaadin-war</artifactId>
									<contextRoot>/lsps-application</contextRoot>
									<bundleFileName>lsps-app-vaadin.war</bundleFileName>
								</webModule>
								<webModule>
									<groupId>com.whitestein.lsps.webconsole</groupId>
									<artifactId>lsps-webconsole-vaadin-war</artifactId>
									<contextRoot>/lsps-management</contextRoot>
									<bundleFileName>lsps-webconsole-vaadin-war.war</bundleFileName>
								</webModule>
								<webModule>
									<groupId>com.whitestein.lsps.human-processes</groupId>
									<artifactId>lsps-human-ws</artifactId>
									<contextRoot>/lsps-human-ws</contextRoot>
									<bundleFileName>lsps-human-ws.war</bundleFileName>
								</webModule>
								<webModule>
									<groupId>com.whitestein.lsps.engine</groupId>
									<artifactId>lsps-engine-ws</artifactId>
									<contextRoot>/lsps-ws</contextRoot>
									<bundleFileName>lsps-engine-ws.war</bundleFileName>
								</webModule>
								<webModule>
									<groupId>com.whitestein.lsps.org-structure</groupId>
									<artifactId>lsps-os-ws</artifactId>
									<contextRoot>/lsps-os-ws</contextRoot>
									<bundleFileName>lsps-os-ws.war</bundleFileName>
								</webModule>
								<webModule>
									<groupId>com.whitestein.lsps.monitoring</groupId>
									<artifactId>lsps-monitoring-ws</artifactId>
									<contextRoot>/lsps-monitoring-ws</contextRoot>
									<bundleFileName>lsps-monitoring-ws.war</bundleFileName>
								</webModule>
							</modules>
							<security>
								<security-role>
									<role-name>user</role-name>
								</security-role>
								<security-role>
									<role-name>processAgent</role-name>
								</security-role>
							</security>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Collect all resources needed to build docker image -->
			<id>lsps.docker</id>
			<activation>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.whitestein.lsps.cli</groupId>
					<artifactId>lsps-cli</artifactId>
					<version>${lsps.version}</version>
					<classifier>full</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>com.whitestein.lsps.db-migration</groupId>
					<artifactId>lsps-db-migration-lsps</artifactId>
					<version>${lsps.version}</version>
					<classifier>full</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>com.whitestein.lsps.db-migration</groupId>
					<artifactId>lsps-db-migration-bam</artifactId>
					<version>${lsps.version}</version>
					<classifier>full</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>com.whitestein.lsps.default-app</groupId>
					<artifactId>lsps-app-db-migration</artifactId>
					<version>0.1-SNAPSHOT</version>
					<classifier>full</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>com.whitestein.lsps.security</groupId>
					<artifactId>lsps-security-jboss</artifactId>
					<version>${lsps.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-lsps-tools</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.whitestein.lsps.cli</groupId>
											<artifactId>lsps-cli</artifactId>
											<version>${lsps.version}</version>
											<classifier>full</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>com.whitestein.lsps.db-migration</groupId>
											<artifactId>lsps-db-migration-lsps</artifactId>
											<version>${lsps.version}</version>
											<classifier>full</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>com.whitestein.lsps.db-migration</groupId>
											<artifactId>lsps-db-migration-bam</artifactId>
											<version>${lsps.version}</version>
											<classifier>full</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>com.whitestein.lsps.default-app</groupId>
											<artifactId>lsps-app-db-migration</artifactId>
											<version>${project.version}</version>
											<classifier>full</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>mysql</groupId>
											<artifactId>mysql-connector-java</artifactId>
											<destFileName>mysql-connector-java.jar</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/resources</outputDirectory>
								</configuration>
							</execution>
							<execution>
									<id>copy-lsps-security</id>
									<phase>package</phase>
									<goals>
										<goal>copy</goal>
									</goals>
									<configuration>
										<artifactItems>
											<artifactItem>
												<groupId>com.whitestein.lsps.security</groupId>
												<artifactId>lsps-security-jboss</artifactId>
												<version>${lsps.version}</version>
												<destFileName>lsps-security-jboss.jar</destFileName>
											</artifactItem>
										</artifactItems>
										<outputDirectory>${project.build.directory}/security</outputDirectory>
									</configuration>
								</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-docker-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/docker</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-exported-model</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/resources</outputDirectory>
									<resources>
										<resource>
											<directory>../${project.parent.artifactId}-model-exporter/target/</directory>
											<includes>
												<include>*.zip</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>docker-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-f</argument>
										<argument>Dockerfile.${docker.targetdb}</argument>
										<!-- Changes in the sh scripts are not detected properly -->
										<!--argument>- -no-cache</argument-->
										<argument>-t</argument>
										<argument>${docker.tag.prefix}/${project.parent.artifactId}:latest-${docker.targetdb}</argument>
										<argument>-t</argument>
										<argument>${docker.tag.prefix}/${project.parent.artifactId}:${project.version}-${docker.targetdb}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>			
		<profile>
			<!-- Collect all resources needed to build docker image -->
			<id>lsps.docker.deploy</id>
			<activation>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>docker-login</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>login</argument>
										<argument>--username</argument>
										<argument>${docker.registry.username}</argument>
										<argument>--password</argument>
										<argument>${docker.registry.password}</argument>
										<argument>${docker.hub.url}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-push-version</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>push</argument>
										<argument>${docker.tag.prefix}/${project.parent.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
							<!--execution>
								<id>docker-push-latest</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>push</argument>
										<argument>${docker.tag.prefix}/${project.parent.artifactId}:latest</argument>
									</arguments>
								</configuration>
							</execution-->
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
